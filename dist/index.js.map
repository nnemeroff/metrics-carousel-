{"version":3,"sources":["../src/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nexport type Trend = 'up' | 'down' | 'neutral';\r\n\r\nexport interface MetricsItem {\r\n  id: string | number;\r\n  title: string;\r\n  value: string; // already formatted string, may include HTML (e.g., superscripts)\r\n  description?: string;\r\n  trend?: Trend;\r\n  trendValue?: string; // already formatted like +1.2% or -15 bps\r\n}\r\n\r\nexport interface KeyMetricsCarouselProps {\r\n  items: MetricsItem[];\r\n  itemsPerSlide?: number; // default 3\r\n  autoRotateMs?: number; // default 7000\r\n  heading?: string; // default \"Key Commission Insights\"\r\n  className?: string;\r\n  valueFontSizePx?: number; // default 30\r\n}\r\n\r\nfunction getTrendIcon(trend?: Trend): string {\r\n  if (trend === 'up') return '↗';\r\n  if (trend === 'down') return '↘';\r\n  return '';\r\n}\r\n\r\nfunction getTrendColor(trend?: Trend): string {\r\n  if (trend === 'up') return 'text-green-600';\r\n  if (trend === 'down') return 'text-red-600';\r\n  return 'text-gray-600';\r\n}\r\n\r\nexport const KeyMetricsCarousel: React.FC<KeyMetricsCarouselProps> = ({\r\n  items,\r\n  itemsPerSlide = 3,\r\n  autoRotateMs = 7000,\r\n  heading = 'Key Commission Insights',\r\n  className,\r\n  valueFontSizePx = 30,\r\n}) => {\r\n  const [currentSlide, setCurrentSlide] = useState<number>(0);\r\n\r\n  const numSlides = useMemo(() => {\r\n    return items.length > 0 ? Math.ceil(items.length / itemsPerSlide) : 1;\r\n  }, [items.length, itemsPerSlide]);\r\n\r\n  useEffect(() => {\r\n    if (numSlides <= 1) return; // no rotation if single slide\r\n    const id = window.setInterval(() => {\r\n      setCurrentSlide((prev) => (prev + 1) % numSlides);\r\n    }, autoRotateMs);\r\n    return () => window.clearInterval(id);\r\n  }, [numSlides, autoRotateMs]);\r\n\r\n  const goToSlide = (index: number) => setCurrentSlide(index);\r\n\r\n  return (\r\n    <div className={className ?? ''}>\r\n      <div className=\"bg-white shadow-sm\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          {heading && (\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">{heading}</h2>\r\n          )}\r\n          <div className=\"relative\">\r\n            <div className=\"overflow-hidden\">\r\n              <div\r\n                className=\"flex transition-transform duration-500 ease-in-out\"\r\n                style={{ transform: `translateX(-${currentSlide * 100}%)` }}\r\n              >\r\n                {Array.from({ length: numSlides }).map((_, slideIndex) => (\r\n                  <div key={slideIndex} className=\"w-full flex-shrink-0\">\r\n                    <div className={`grid grid-cols-1 ${itemsPerSlide === 2 ? 'md:grid-cols-2' : ''} ${itemsPerSlide === 3 ? 'md:grid-cols-3' : ''} ${itemsPerSlide === 4 ? 'md:grid-cols-4' : ''} gap-6`}>\r\n                      {items\r\n                        .slice(slideIndex * itemsPerSlide, slideIndex * itemsPerSlide + itemsPerSlide)\r\n                        .map((it) => (\r\n                          <div key={it.id} className=\"bg-gray-50 rounded-lg p-6 hover:shadow-md transition-shadow\">\r\n                            <h3 className=\"text-sm font-semibold text-sky-400 uppercase tracking-wider mb-2\" style={{ fontSize: '14px' }}>\r\n                              {it.title}\r\n                            </h3>\r\n                            <div className=\"flex items-baseline gap-2 mb-3\">\r\n                              <p className=\"font-bold text-gray-900\" style={{ fontSize: `${valueFontSizePx}px` }} dangerouslySetInnerHTML={{ __html: it.value }} />\r\n                              {it.trend && it.trendValue && (\r\n                                <span className={`text-sm font-medium ${getTrendColor(it.trend)}`}>\r\n                                  {getTrendIcon(it.trend)} {it.trendValue.replace(/^[+-]/, '')}\r\n                                </span>\r\n                              )}\r\n                            </div>\r\n                            {it.description && (\r\n                              <p className=\"text-sm text-gray-600\">{it.description}</p>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {numSlides > 1 && (\r\n              <div className=\"flex justify-center mt-6 gap-2\">\r\n                {Array.from({ length: numSlides }).map((_, idx) => (\r\n                  <button\r\n                    key={idx}\r\n                    onClick={() => goToSlide(idx)}\r\n                    className={`w-2 h-2 rounded-full transition-colors ${currentSlide === idx ? 'bg-blue-600' : 'bg-gray-300'}`}\r\n                    aria-label={`Go to slide ${idx + 1}`}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeyMetricsCarousel;\r\n\r\n\r\n"],"mappings":"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","names":[]}